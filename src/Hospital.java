
import Database.DatabaseManager;
import java.sql.*;
import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import java.awt.Container;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Raiyan
 */
public class Hospital extends javax.swing.JFrame {

    /**
     * Creates new form HospitalFrame
     */
    boolean touched = false;
    
    public Hospital() {
        initComponents();
        //frameColor();
        getHospital();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        hospital = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        mail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        insert = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        src = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Hospital Details");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        hospital.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        hospital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Phone", "Email", "Address"
            }
        ));
        jScrollPane1.setViewportView(hospital);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(266, 116, 820, 450);

        jLabel2.setFont(new java.awt.Font("Monospaced", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("New Entry");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(41, 116, 175, 27);

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hospital Details");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(530, 60, 360, 43);

        jLabel3.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Hospital Name");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(60, 177, 130, 22);

        name.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        name.setText("Enter Name");
        name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameMouseClicked(evt);
            }
        });
        getContentPane().add(name);
        name.setBounds(25, 205, 200, 35);

        jLabel4.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Hospital Contact");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(47, 275, 160, 33);

        phone.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        phone.setText("Enter Phone Number");
        phone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phoneMouseClicked(evt);
            }
        });
        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });
        getContentPane().add(phone);
        phone.setBounds(25, 314, 200, 35);

        jLabel5.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Email");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(75, 377, 98, 28);

        mail.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        mail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        mail.setText("Enter Email Address");
        mail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mailMouseClicked(evt);
            }
        });
        getContentPane().add(mail);
        mail.setBounds(25, 411, 200, 36);

        jLabel6.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Address");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(66, 482, 115, 31);

        address.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        address.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        address.setText("Enter Hospital Address");
        address.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addressMouseClicked(evt);
            }
        });
        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });
        getContentPane().add(address);
        address.setBounds(25, 519, 200, 35);

        insert.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });
        getContentPane().add(insert);
        insert.setBounds(60, 601, 130, 50);

        jLabel7.setFont(new java.awt.Font("Monospaced", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Search Here");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(1161, 330, 132, 27);

        src.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        src.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        src.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srcKeyReleased(evt);
            }
        });
        getContentPane().add(src);
        src.setBounds(1131, 363, 201, 34);

        delete.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(624, 601, 130, 50);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectInnerPicture.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(-6, -6, 1380, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        
    }//GEN-LAST:event_formMouseExited

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
  
    }//GEN-LAST:event_formMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
   
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       this.setSize(1400, 760);
    }//GEN-LAST:event_formWindowOpened

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        try {
            setHospital();
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(null,"Data Inserted Successfully!"+ex,"Connection Status",JOptionPane.INFORMATION_MESSAGE);
                
            Logger.getLogger(Hospital.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_insertActionPerformed

    private void nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameMouseClicked
        name.setText("");
        touched = true;
    }//GEN-LAST:event_nameMouseClicked

    private void phoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneMouseClicked
        phone.setText("");
        touched = true;
    }//GEN-LAST:event_phoneMouseClicked

    private void mailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mailMouseClicked
       mail.setText("");
       touched = true;
    }//GEN-LAST:event_mailMouseClicked

    private void addressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addressMouseClicked
        address.setText("");
        touched = true;
    }//GEN-LAST:event_addressMouseClicked

    private void srcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srcKeyReleased
        
        ResultSet rs;
        DatabaseManager hospitalData = DatabaseManager.getInstace();
        PreparedStatement pst;
        String search = src.getText();
        try{
           if(search.matches("^[0-9]+$") && search.charAt(0)!='0')
           {
              String query = "Select * from tbl_hospital where hospitalId = "+search;
              pst = hospitalData.getPreparedStatement(query);
              rs = pst.executeQuery();
              hospital.setModel(DbUtils.resultSetToTableModel(rs));
           }
           else
           {
              String query = "Select * from tbl_hospital where hs_contact Like '%"+search+"%' or hs_address Like '%"+search+"%' or hs_name Like '%"+search+"%' or hs_email Like '%"+search+"%'";
              pst = hospitalData.getPreparedStatement(query);
              rs = pst.executeQuery();
              hospital.setModel(DbUtils.resultSetToTableModel(rs));
           }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_srcKeyReleased

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
       int row = hospital.getSelectedRow();
       Delete(row);
    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hospital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hospital().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JButton delete;
    private javax.swing.JTable hospital;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mail;
    private javax.swing.JTextField name;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField src;
    // End of variables declaration//GEN-END:variables

    private void clear()
    {
       name.setText("");
       phone.setText("");
       mail.setText("");
       address.setText("");
    }
    
    
    private void getHospital()
    {
        
        DefaultTableModel mod = (DefaultTableModel)hospital.getModel();
        while(mod.getRowCount() > 0)
        {
           mod.removeRow(0);
        }
        
        DatabaseManager hospitalData = DatabaseManager.getInstace();
        //System.out.println(patient.checkConnection());
        
        if(hospitalData.checkConnection())
        {
          String query = "Select * from tbl_Hospital";
          ResultSet rset = null;
           try {
               rset = hospitalData.getResult(query);
           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
               Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
           }
           try {
               while(rset.next())
               { 
                   int id = rset.getInt("hospitalId");
                   String name = rset.getString("hs_name");
                   String contact = rset.getString("hs_contact");
                   String email = rset.getString("hs_email");
                   String address = rset.getString("hs_address");
                   
                   Object[] row = {id,name,contact,email,address};
                   
                   DefaultTableModel model = (DefaultTableModel) hospital.getModel();
                   model.addRow(row);
                   
               }} catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
               Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
    }
    
    private void setHospital() throws SQLException
    {
        String nam = name.getText();
        String ph = phone.getText();
        String email = mail.getText();
        String add = address.getText();
        //String add = null;
     if(nam.isEmpty() || ph.isEmpty() || email.isEmpty() || add.isEmpty() || !touched)
            {
                JOptionPane.showMessageDialog(null, "Please Fill The Entry Form Correctly", "Warning", JOptionPane.WARNING_MESSAGE);
            }
     else{
        
     try
     {
                DatabaseManager hospitalData = DatabaseManager.getInstace();
         
                String query = "INSERT INTO tbl_hospital(hs_name,hs_address,hs_contact,hs_email) Values(?,?,?,?)";
                PreparedStatement pst = hospitalData.getPreparedStatement(query);
                
                
                pst.setString(1, nam);
                pst.setString(2, add);
                pst.setString(3, ph);
                pst.setString(4, email);
  
                pst.executeUpdate();
                
                JOptionPane.showMessageDialog(null,"Data Inserted Successfully!","Connection Status",JOptionPane.INFORMATION_MESSAGE);
                
                getHospital();
                
                clear();
                
     }
    catch(Exception e){    
        
         JOptionPane.showMessageDialog(null,"Please Check The Connection Settings!\n","Error!",JOptionPane.ERROR_MESSAGE);
         
    }
    }

   }
    
    private void frameColor()
    {
        Container c;
        JLabel imageLabel;
        ImageIcon img;
    
        c = this.getContentPane();
        c.setLayout(null);
        
        img = new ImageIcon(getClass().getResource("img2.jpg"));
        imageLabel = new JLabel(img);
        imageLabel.setBounds(0, 0, img.getIconWidth(), img.getIconHeight());
        c.add(imageLabel);
        
        //Icon Set
        img = new ImageIcon(getClass().getResource("img2.jpg"));
        this.setIconImage(img.getImage());
    }

    private void Delete(int row) {
        
       Object index = hospital.getValueAt(row, 0);
       
       try
     {   
                DatabaseManager hospitalData = DatabaseManager.getInstace();
         
                String query = "DELETE FROM tbl_hospital Where hospitalID = "+index;
                PreparedStatement pst = hospitalData.getPreparedStatement(query);
  
                pst.executeUpdate();
                
                JOptionPane.showMessageDialog(null,"Data Deleted Successfully!","Connection Status",JOptionPane.INFORMATION_MESSAGE);
                
                getHospital();
     }
    catch(Exception e){    
        
         JOptionPane.showMessageDialog(null,"Please Check The Connection Settings!\nOr Fill The From Correctly","Error!",JOptionPane.ERROR_MESSAGE);
         
        }
    }
    public int getHospitalID(String hospitalName)
    {
       DatabaseManager hospitalData = DatabaseManager.getInstace();
       int hospitalID = 0;
       if(hospitalData.checkConnection())
        {
           ResultSet rset = null;
           try {
                String query = "Select hospitalID from tbl_hospital where hs_name = "+"'"+hospitalName+"';";
               rset = hospitalData.getResult(query);
           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
               Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
           }
           try {
                while(rset.next())
                {
                   hospitalID = Integer.parseInt(rset.getString("hospitalID"));
                }
                
           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
               Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
       return hospitalID;
       
    }
    
    public void setHospitalComboBox(JComboBox hospitalComboBox)
    {
        DatabaseManager hospitalData = DatabaseManager.getInstace();
        
        if(hospitalData.checkConnection())
        {
            ResultSet rset = null;
           try {
                String query = "Select * from tbl_hospital";
               rset = hospitalData.getResult(query);
           } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
               Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
           }
           try {
               while(rset.next())
               {    
                   String hospitalName = rset.getString("hs_name");
                   hospitalComboBox.addItem(hospitalName);
                   
               }} catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
               Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        
    }
}
