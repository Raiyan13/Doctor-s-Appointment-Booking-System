
import Database.DatabaseManager;
import java.awt.Container;
import static java.lang.Integer.parseInt;
import static java.sql.DriverManager.println;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Raiyan
 */
public class Appointment extends javax.swing.JFrame {

    /**
     * Creates new form AppointmentFrame
     */
    public Appointment() {

        initComponents();
        //frameColor();
        getAppointment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        appointment = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        src = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        insert = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        hour = new javax.swing.JComboBox<>();
        minute = new javax.swing.JComboBox<>();
        ampm = new javax.swing.JComboBox<>();
        date = new com.toedter.calendar.JDateChooser();
        employeeComboBox = new javax.swing.JComboBox<>();
        hospitalComboBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        doctorComboBox = new javax.swing.JComboBox<>();
        patientComboBox = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Appointment");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        appointment.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        appointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appointment ID", "Time", "Date", "Chamber ID", "Patient ID", "Employee ID"
            }
        ));
        jScrollPane1.setViewportView(appointment);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(293, 134, 790, 450);

        jLabel1.setFont(new java.awt.Font("Monospaced", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Appointment Details");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(470, 70, 440, 38);

        jLabel2.setFont(new java.awt.Font("Monospaced", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Search Here");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(1167, 311, 132, 27);

        jLabel3.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Appointment Time");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(54, 164, 160, 22);

        jLabel4.setFont(new java.awt.Font("Monospaced", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("New Entry");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(80, 109, 108, 27);

        src.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        src.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srcActionPerformed(evt);
            }
        });
        src.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                srcKeyReleased(evt);
            }
        });
        getContentPane().add(src);
        src.setBounds(1123, 344, 210, 39);

        jLabel5.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Appointment Date");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(50, 240, 160, 22);

        jLabel6.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Doctor Name");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(80, 310, 110, 22);

        jLabel7.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Patient Name");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(70, 370, 120, 22);

        jLabel8.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Employee Name");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(60, 510, 140, 22);

        insert.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });
        getContentPane().add(insert);
        insert.setBounds(60, 620, 130, 50);

        jLabel9.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("For Date: yyyy-mm-dd");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(1149, 421, 160, 20);

        jLabel10.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("For Time: hh:mm");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(1149, 447, 167, 20);

        jLabel11.setFont(new java.awt.Font("Monospaced", 1, 15)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Use This Formate");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(1156, 394, 153, 21);

        delete.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(650, 630, 117, 50);

        hour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        getContentPane().add(hour);
        hour.setBounds(54, 192, 49, 31);
        hour.getAccessibleContext().setAccessibleName("");

        minute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        getContentPane().add(minute);
        minute.setBounds(109, 192, 47, 31);

        ampm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));
        getContentPane().add(ampm);
        ampm.setBounds(162, 192, 52, 31);

        date.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        getContentPane().add(date);
        date.setBounds(40, 270, 176, 34);

        getContentPane().add(employeeComboBox);
        employeeComboBox.setBounds(40, 530, 170, 40);

        getContentPane().add(hospitalComboBox);
        hospitalComboBox.setBounds(40, 460, 170, 40);

        jLabel13.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Hospital Name");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(60, 440, 140, 22);

        getContentPane().add(doctorComboBox);
        doctorComboBox.setBounds(40, 330, 170, 30);

        getContentPane().add(patientComboBox);
        patientComboBox.setBounds(40, 390, 170, 40);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectInnerPicture.jpg"))); // NOI18N
        jLabel14.setText("jLabel14");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(0, 0, 1380, 880);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void srcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_srcActionPerformed

    private void srcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_srcKeyReleased
        ResultSet rs;
        DatabaseManager appointmentData = DatabaseManager.getInstace();
        PreparedStatement pst;
        String search = src.getText();
        try {
            if (search.matches("^[0-9]+$") && search.charAt(0) != '0') {
                String query = "Select * from tbl_appointment where chamberID = " + search + " or appointmentID = " + search + " or patientID = " + search + " or employeeID = " + search;
                pst = appointmentData.getPreparedStatement(query);
                rs = pst.executeQuery();
                appointment.setModel(DbUtils.resultSetToTableModel(rs));
            } else {
                String query = "Select * from tbl_appointment where ap_date Like '%" + search + "%' or ap_startTime Like '%" + search + "%'";
                pst = appointmentData.getPreparedStatement(query);
                rs = pst.executeQuery();
                appointment.setModel(DbUtils.resultSetToTableModel(rs));
            }
        } catch (Exception e) {
           JOptionPane.showMessageDialog(null, "There is something wrong in database!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_srcKeyReleased

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        try {
            setAppointment();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Please Enter Valid ID" + ex, "Connection Status", JOptionPane.INFORMATION_MESSAGE);

            //Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_insertActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setSize(1400, 760);
    }//GEN-LAST:event_formWindowOpened

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int row = appointment.getSelectedRow();

        Object index = appointment.getValueAt(row, 0);

        try {
            DatabaseManager appointmentData = DatabaseManager.getInstace();

            String query = "DELETE FROM tbl_appointment Where appointmentID = " + index;
            PreparedStatement pst = appointmentData.getPreparedStatement(query);

            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Data Deleted Successfully!", "Connection Status", JOptionPane.INFORMATION_MESSAGE);

            getAppointment();
        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Please Check The Connection Settings!\nOr Fill The From Correctly", "Error!", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Appointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ampm;
    private javax.swing.JTable appointment;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> doctorComboBox;
    private javax.swing.JComboBox<String> employeeComboBox;
    private javax.swing.JComboBox<String> hospitalComboBox;
    private javax.swing.JComboBox<String> hour;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> minute;
    private javax.swing.JComboBox<String> patientComboBox;
    private javax.swing.JTextField src;
    // End of variables declaration//GEN-END:variables

    private void getAppointment() {

        Employee employee = new Employee();
        employeeComboBox.removeAllItems();
        employee.setEmployeeComboBox(employeeComboBox);
        Hospital hospital = new Hospital();
        hospitalComboBox.removeAllItems();
        hospital.setHospitalComboBox(hospitalComboBox);
        Doctor doctor = new Doctor();
        doctorComboBox.removeAllItems();
        doctor.setDoctorComboBox(doctorComboBox);
        Patient patient = new Patient();
        patientComboBox.removeAllItems();
        patient.setPatientComboBox(patientComboBox);
        DefaultTableModel mod = (DefaultTableModel) appointment.getModel();
        while (mod.getRowCount() > 0) {
            mod.removeRow(0);
        }

        DatabaseManager appointmentData = DatabaseManager.getInstace();

        if (appointmentData.checkConnection()) {
            String query = "Select * from tbl_appointment";
            ResultSet rset = null;
            try {
                rset = appointmentData.getResult(query);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Please Check Database", "Warning", JOptionPane.WARNING_MESSAGE);
                Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                while (rset.next()) {
                    int app = rset.getInt("appointmentId");
                    int che = rset.getInt("chamberId");
                    int pat = rset.getInt("patientId");
                    int emp = rset.getInt("employeeId");
                    String tm = rset.getString("ap_startTime");
                    String dt = rset.getString("ap_date");

                    Object[] row = {app, tm, dt, che, pat, emp};

                    DefaultTableModel model = (DefaultTableModel) appointment.getModel();
                    model.addRow(row);

                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
                //Logger.getLogger(Patient.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void clear() {

    }

    private void setAppointment() throws SQLException {

        Employee employee = new Employee();
        Chamber chamber = new Chamber();
        Hospital hospital = new Hospital();
        Doctor doctor = new Doctor();
        Patient patient = new Patient();
        String hr = hour.getSelectedItem().toString();
        String mint = minute.getSelectedItem().toString();
        String tm = ampm.getSelectedItem().toString();
        String full_time = hr + ":" + mint + tm;
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String dt = sdf.format(date.getDate());
        String e = employeeComboBox.getSelectedItem().toString();
        int emp = employee.getEmployeeID(e);
        String doctorName = doctorComboBox.getSelectedItem().toString();
        String hospitalName = hospitalComboBox.getSelectedItem().toString();
        String patientName = patientComboBox.getSelectedItem().toString();
        int che = chamber.getChamberID(doctor.getDoctorID(doctorName), hospital.getHospitalID(hospitalName));
        int pat = patient.getPatientID(patientName);

        if (e.isEmpty() || che == 0 || patientName.isEmpty() || tm.isEmpty() || hr.isEmpty() || mint.isEmpty() || dt.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Fill The Entry Form Correctly", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            DatabaseManager appointmentData = DatabaseManager.getInstace();

            String query = "INSERT INTO tbl_appointment(ap_startTime,ap_date,chamberId,patientId,employeeId) VALUES(?,?,?,?,?)";
            PreparedStatement pst = appointmentData.getPreparedStatement(query);

            pst.setString(1, full_time);
            pst.setString(2, dt);
            pst.setInt(3, che);
            pst.setInt(4, pat);
            pst.setInt(5, emp);

            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Data Inserted Successfully!", "Connection Status", JOptionPane.INFORMATION_MESSAGE);

            getAppointment();

            clear();

        }
    }

    private void frameColor() {
        Container c;
        JLabel imageLabel;
        ImageIcon img;

        c = this.getContentPane();
        c.setLayout(null);

        img = new ImageIcon(getClass().getResource("img2.jpg"));
        imageLabel = new JLabel(img);
        imageLabel.setBounds(0, 0, img.getIconWidth(), img.getIconHeight());
        c.add(imageLabel);

        //Icon Set
        img = new ImageIcon(getClass().getResource("img2.jpg"));
        this.setIconImage(img.getImage());
    }
}
